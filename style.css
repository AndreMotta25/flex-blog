/*INICIO RESET*/
*{
    margin: 0;
    padding: 0;
    list-style: none;
    text-decoration: none;
    box-sizing: border-box;
}
body{
    font-family: "Nunito",Arial, Helvetica, sans-serif;
    color: #222222;
}
img {
    display: block;
    max-width: 100%;
}
/*
.foto{
    max-width: 800px;
    background-color: aqua;
}*/
/*FIM RESET*/

/*SUPER INFO*/
.superinfo-bg {
    background-color: #122ab2;
    color: white;
}
/*com o max-width ou width, o que faz o container ficar
centralziado como se fosse responsivo é o margin auto que tenta
centralizar o container o tempo todo. 
Mas o responsavel por deixar o texto 'responsivo' é o 
max-width*/
.superinfo {
    max-width: 960px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    padding-top: 10px;
}
.superinfo a {
    color:white;
}
.superinfo p, .superinfo a {
    margin: 0 10px 10px 10px;
}
/*FIM SUPER INFO*/

/*INICIO MENU*/
.menu-bg{
    background-color: #2c70ff;
}
/*é o container*/
.menu {
    max-width: 960px;
    margin: 0 auto;
    padding: 15px 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}
.menu a {
    color:white;
}
.menu-logo {
    /*36/16 = 2,25 -> 2.25em*/
    font-size: 2.25em;
    font-weight: bold;
    margin: 0 10px;
}
.menu-nav ul{
    display: flex;
    flex-wrap: wrap;
}
.menu-nav a {
    /*20/16 = 1,25 ====== prova real ====== 1.25 x 16 = 20*/
    font-size: 1.25em;
    display: block;
    padding: 10px;
}
.menu-nav a:hover{
    color: #122ab2;
}
/*FIM MENU*/

/*INTRODUÇÃO*/
.introducao {
    font-size: 3em;
    line-height: 1;
    max-width: 960px;
    margin: 0 auto;
    padding: 60px 10px;
}
/*FIM-INTRODUCAO*/


/*SOBRE*/
.sobre{
    border-top: 2px solid #2c70ff;
    border-bottom: 2px solid #2c70ff;
    max-width: 960px;
    margin: 0 auto;
    padding: 60px 0;
    display: flex;
    /*nesse caso aqui, só o flex-wrap nao sera o suficiente
    pq as fotos diminuiram ao infinito e alem.*/
    flex-wrap: wrap;
}
.sobre-info{
    /*para resolver o problema do flex-wrap nao quebrar 
    a linha, temos que definir um flex-basis, assim o elemento 
    saberá que o maximo que ele pode chegar é em 300px. 
    quando o elemento chegar em 300px ele quebrará normalmente
    e depois que quebrar a linha, o elemento voltará a 
    seguir o flex-grow. isso serve para o sobre-img*/
    flex: 2 1 300px;
    margin: 0 10px;
}
.sobre-info h1 {
    font-size: 3em;
    margin-bottom: .5em;
}
/*como nao definimos um tamanho fixo para o p, ele vai ir diminuindo 
junto com o browser. se definissimos um max-width isso 
tambem funcionaria */
.sobre-info p {
    font-size: 1.25em;
    line-height: 1.4em;
    margin-bottom: 1em;
    color: #7c7c7c;
}
.sobre-img{
    flex: 1 1 160px; 
    margin: 0 10px;

}
/*FIM SOBRE*/

/*INICIO PORDUTOS*/
.produtos {
    max-width: 960px;
    margin: 60px auto;
}
.produtos h1 {
    font-size: 3em;
    margin: 0 10px 60px 10px;
}
/*antes do wrap, as divs com as fotos ficavam 
um do lado da outra(isso só transformando-as em
flex-itens), mas com o wrap, as fotos vao ficar em seu 
tamanho normal, que é grande pra crl. */
.produtos-container{
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end
}
/*para resolver o problema citado acima, 
nós definimos um valor minimo para a div,
assim enquanto formos diminuindo a janela, caso
a div chegue no tamanho de 175px ela vai quebrar.
só por causa do grow que a div vai se encaixaar no container 
inteiro*/
.produtos-item {
    flex: 1 1 175px;
    margin: 10px;
}
.produtos-item h2{
    font-size: 3em;
    color:#a4a4a4;
    background-color: #f7f7f7;
    padding: 60px 20px;
}
.purple {
    border-top: 8px solid #ae81ff;
}
.pink {
    border-top: 8px solid #f9265e;
}
.blue {
    border-top: 8px solid #66d9eb;
}

/*preco*/
.preco {
    background-color: #f7f7f7;
    padding: 60px;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
}
.preco-item {
    flex: 1 1 260px;
    border: 4px solid white;
    padding: 20px;
    margin: 10px;
}
.preco-item h2 {
    font-size: 3em;
    color: #a4a4a4;
    text-align: center;
    margin-top: 20px;
}
.preco-item span{
    max-width: 300px;
    margin: 20px auto;
    display: block;
    font-size: 3em;
    text-align: center;
    font-weight: bold;
    padding: 10px 0 5px 0;
    border-top: 4px solid white;
    border-bottom: 4px solid white;
}
/*aqui o tamanho da fonte vai ser em relação a
raiz e nao ao pai. para ser em relação ao pai é 
só .em*/
.preco-item sup {
    font-size: 1.5rem;
} 
.preco-item ul {
    max-width: 300px;
    margin: 20px auto;
    font-size: 1.25em;
    font-style: italic;
    color: #7c7c7c;
}
.preco-item li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}
.preco-item li::after {
    content: '';
    display: block;
    width: 6px;
    height: 6px;
    border-radius: 50px;
    background-color: #2c70ff;
}   
.preco-item a {
    display: block;
    max-width: 300px;
    margin: 20px auto;
    border: 4px solid;
    color: #222;
    font-weight: bold;
    font-size: 2.25em;
    text-transform: uppercase;
    text-align: center;
    padding: 15px 0;
}
/*fim preco*/

/*Qualidade*/
.qualidade {
    max-width: 960px;
    margin: 60px auto;
    display: flex;
    flex-wrap:wrap ;
}
.qualidade-item {
    flex: 1 1 300px;
    margin: 20px 10px;
}
.qualidade-item h2{
    font-size: 2.25em;
    color:#a4a4a4;
    margin-bottom: 20px ;
}
.qualidade-item h2::before{
    content: '';
    display: inline-block;
    width: 8px;
    height: 30px;
    background-color: blue;
    margin-right: 10px;

}



.qualidade-item:nth-of-type(3n+1) h2::before{
    background-color: #ae81ff;    
}
.qualidade-item:nth-of-type(3n+2) h2::before{
    background-color: #f9265e;    
}
.qualidade-item:nth-of-type(3n+3) h2::before{
    background-color: #66d9eb;    
}
.qualidade-item p{
    font-size: 1.25em;
    line-height: 1.4;
    color: #7c7c7c;
}

/*news latter */
/*essa parte é interessante, pois ele centraliza os elementos, como se
tivesse um div dentro de um section, mas na verdade só tem um section*/

.newsletter {
    /*isso vai centralizar o 'container' que na vdd é um section
    o efeito é como se tivesse uma div como conteiner destes elementos
    centralizando-os.
    sei que no final, o valor abaixo vai ficar tanto pra 
    esquerda quanto para direita.
    digaos que o layout tem 1423px de largura
    1423 - 960 = 463, agora aplicaremos para ambos os lados 
    com a divisão por 2, dando para cado lado 231px(tanto pra esquerda 
    quanto para a direita). 
    O MAIS INTERESSANTE É QUE O CALC VAI FAZER ISSO EM TEMPO REAL, 
    GRAÇAS AOS 100% EU ACHO. ENTAO  A MEDIDA QUE FORMOS DIMINUINDO 
    A TELA O CALC VAI RECALCULADO OS 100%. ISSO É BOM PQ SE 
    EU COLOCASSE UM TAMANHO DE 960PX, O BACKGROUND SÓ FUNCIONARIA NESSES  960PX 
    E NAO NO LAYOUT TODO. ISSO DEIXA O HTML MAIS LIMPO*/

    padding: 60px calc((100% - 960px)/2);
    display: flex;
    flex-wrap: wrap;
}

.newsletter-info {
    flex: 1 1 200px;
    margin: 0 10px;
}
.newsletter-info h1{
    font-size: 3em;
    color: #a4a4a4;
}
.newsletter-info p {
    font-size: 1.25em;
    /*COMO EU QUERO QUE O P QUEBRE EU VOU COLOCAR
    O TAMANHO MAXIMO DE 230PX*/
    max-width: 230px;
    font-style: italic;
    color: #7c7c7c;
    margin-bottom: 10px;
}
.newsletter-form {
    flex: 2 1 260px;
    margin: 0 10px;
    align-self: center;
    display: flex;
    flex-wrap: wrap;
}
.newsletter-form input{
    flex: 3 1 200px;
    font-size: 1.25em;
    color: #7c7c7c;
    font-style: italic;
    font-family: "Nunito",Arial, Helvetica, sans-serif;
    border: 4px solid #2c70ff;
    background: transparent;
    padding: 10px;
    /*reset*/
    margin: 0px;
    border-radius: 0px;
}
/*em tela grande o button vai ter 
um tamanho maior que 200px pois seu 
flex-grow é 1, mas quando formos diminuindo
e o button chegar a 199px ele vai quebrar */
.newsletter-form button {
    flex: 1 1 200px;
    font-family: "Nunito",Arial, Helvetica, sans-serif;
    font-size: 2.25em;
    font-weight: bold;
    text-transform: uppercase;
    background: #2c70ff;
    color: white;
    margin: 0px;
    cursor: pointer;
    border: 0px;
    padding: 15px 10px;
}

/*footer*/
.footer {
    display: flex;
    background: #2c70ff;
    height: 200px;
    align-items: center;
    justify-content: center;
    font-size: 2.25em;
    text-align: center;
    color: #122ab2;
}

@media (max-width:600px){
    .newsletter-form button {
        font-size: 1.5em;
    }
}
@media (max-width:800px){
    .preco {
        padding-left: 10px;
        padding-right: 10px;
    }
    .preco .preco-item:nth-child(3){
        order: -2;
    }
    .preco .preco-item:nth-child(2){
        order: -1;
    }
}